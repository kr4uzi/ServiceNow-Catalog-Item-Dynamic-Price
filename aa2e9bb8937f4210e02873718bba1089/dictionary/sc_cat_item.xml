<?xml version="1.0" encoding="UTF-8"?><database>
    <element attributes="all_tables.synch_attachments=true,global_search_config_handler=CatalogItem,kagami_csindex_enabled=true,text_wiki_translations=true,update_synch=true" db_object_id="41df776ef8b2021008dd9cfea425ac53" extends="sys_metadata" label="Catalog Item" max_length="40" name="sc_cat_item" read_roles="catalog,itil" text_index="true" type="collection">
        <element label="Price Script" max_length="8000" name="x_376096_scp_price_script" type="script"/>
        <element label="Use Price Script" max_length="40" name="x_376096_scp_price_use_script" type="boolean"/>
        <element default="/* global defaultPrice, cartItemGr, priceConvert */&#13;&#10;/* eslint no-undef: &quot;error&quot; */&#13;&#10;/**&#13;&#10; * This function is used to convert the given price into&#13;&#10; * the localalized currency of the calling user.&#13;&#10; * &#13;&#10; * @callback PriceConverter&#13;&#10; * @param {string} currency - USD, EUR, GBP, CHF, JPY, ...&#13;&#10; * @param {number} amount&#13;&#10; * @return {(number|null)} - returns the number &#13;&#10; */&#13;&#10;(function (&#13;&#10;&#9;/** @type {number} */ defaultPrice,&#13;&#10;&#9;/** @type {GlideRecordGenerated &amp; sc_cart_item} */ cartItemGr,&#13;&#10;&#9;/** @type {PriceConverter} */ priceConvert) {&#13;&#10;&#13;&#10;&#9;// access variable values via cartItemGr.variables.variable1_technical_name&#13;&#10;&#9;return defaultPrice + priceConvert('USD', 500);&#13;&#10;&#9;&#13;&#10;})(defaultPrice, cartItemGr, priceConvert);" label="Price (recurring) Script" max_length="8000" name="x_376096_scp_price_recurring_script" type="script"/>
        <element default="/* global defaultPrice, cartItemGr, priceConvert */&#13;&#10;/* eslint no-undef: &quot;error&quot; */&#13;&#10;/**&#13;&#10; * This function is used to convert the given price into&#13;&#10; * the localalized currency of the calling user.&#13;&#10; * &#13;&#10; * @callback PriceConverter&#13;&#10; * @param {string} currency - USD, EUR, GBP, CHF, JPY, ...&#13;&#10; * @param {number} amount&#13;&#10; * @return {(number|null)} - returns the number &#13;&#10; */&#13;&#10;(function (&#13;&#10;&#9;/** @type {number} */ defaultPrice,&#13;&#10;&#9;/** @type {GlideRecordGenerated &amp; sc_cart_item} */ cartItemGr,&#13;&#10;&#9;/** @type {PriceConverter} */ priceConvert) {&#13;&#10;&#13;&#10;&#9;// access variable values via cartItemGr.variables.variable1_technical_name&#13;&#10;&#9;return defaultPrice + priceConvert('USD', 500);&#13;&#10;&#9;&#13;&#10;})(defaultPrice, cartItemGr, priceConvert);" hint="Wether or not to use a script to calculate the recurring price. The recurring frequency is configured in the 'Pricing' section." label="Use Price (recurring) Script" max_length="40" name="x_376096_scp_price_use_recurring_script" type="boolean"/>
    </element>
</database>
